@model Product_Management.Models.User

@{
    ViewBag.Title = "Register";
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<h2>Register New User</h2>


@using (Html.BeginForm("Register", "Account", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Username, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Username, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Username, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-12" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="row">
            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", id = "password" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-6">
                @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label col-md-12" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control", id = "confirmpassword" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger", id = "confirmtext" })
                </div>
            </div>
        </div>
        <br />

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" id="btnSubmit" class="btn btn-success" />
            </div>
        </div>
    </div>
}

<script>
    $(function () {
        //Client side custom validations
        $("#btnSubmit").click(function () {
            var password = $("#password").val();
            var confirmpassword = $("#confirmpassword").val();

            var flag = 0;



            
            if (password != "" && confirmpassword != "") {
                if (password != confirmpassword) {
                    $("#confirmtext").text("Passwords do not match");
                    //alert("Passwords do not match!");
                    flag = 1;
                }
            }
            if (flag == 1)
                return false;
            return true;
        })


    })
</script>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
