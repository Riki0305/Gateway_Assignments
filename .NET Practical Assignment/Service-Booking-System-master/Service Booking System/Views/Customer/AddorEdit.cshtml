@model SBS.Model.Customer

@{
    ViewBag.Title = "AddorEdit";
}
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
@if (Model.Id == 0)
{
    <h2>Create New Account as Customer</h2>
}
else
{
    <h2>Update Profile</h2>
}


@using (Html.BeginForm("AddorEdit", "Customer", FormMethod.Post))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id, new { id = "modelId" })
        @Html.HiddenFor(model => model.CustomerNo, new { id = "modelId" })
        <div class="row">

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control col-md-11" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control col-md-11" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Contact, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.Contact, new { htmlAttributes = new { @class = "form-control col-md-11" } })
                    @Html.ValidationMessageFor(model => model.Contact, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.HomeContact, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-12">
                    @Html.EditorFor(model => model.HomeContact, new { htmlAttributes = new { @class = "form-control col-md-11" } })
                    @Html.ValidationMessageFor(model => model.HomeContact, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Address1, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-12">
                    @*@Html.TextAreaFor(model => model.Address1, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.TextAreaFor(model => model.Address1, new { @class = "form-control col-md-12", @rows = 5 })

                    @Html.ValidationMessageFor(model => model.Address1, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Address2, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-12">
                    @*@Html.EditorFor(model => model.Address2, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.TextAreaFor(model => model.Address2, new { @class = "form-control col-md-12", @rows = 5 })

                    @Html.ValidationMessageFor(model => model.Address2, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.ZipCode, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ZipCode, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ZipCode, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Note, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-12">
                    @*@Html.EditorFor(model => model.Note, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.TextAreaFor(model => model.Note, new { @class = "form-control col-md-12", @rows = 3 })

                    @Html.ValidationMessageFor(model => model.Note, "", new { @class = "text-danger" })
                </div>
            </div>

        </div>
        <div class="row">
            <div class="form-group col-md-4">
                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label col-md-6" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control", id = "Pass" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                </div>
            </div>
            <div class="form-group col-md-4">
                <label class="control-label col-md-6">Confirm Password</label>
                <div class="col-md-10">
                    <input type="password" name="confirmPass" id="confirmPass" class="form-control" value="" required />
                    <span id="confirmPassError"></span>
</div>
            </div>
        </div>


        <div class="form-group ">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" onclick="return validate()" class="btn btn-success" />
                @*@Html.ActionLink("Customer List", "Index", null, new { @class = "btn btn-primary" })*@
            </div>
        </div>
    </div>
}

<div>

</div>

<script>
    function validate() {
        var pass = $("#Pass").val();
        var cpass = $("#confirmPass").val();
        if (pass != cpass) {
            $("#confirmPassError").val() = "error";
        }
    }
</script>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
